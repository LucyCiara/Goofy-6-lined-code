def setThing(): global thing; thing = not thing
def testcode1(): global duration; start = time(); [print(f"{x} Partall") if float(x/2).is_integer() else print(f"{x} Oddetall") for x in range(0, 200)]; end = time(); duration = "{:.8f}".format(end-start); output.writelines(f"{str(duration)}\n")
def testcode2(): global duration; start = time(); [print(f"{i*2}, Partall\n{i*2+1}, Oddetall") for i, n in enumerate(ones(100).tolist())]; end = time(); duration = "{:.8f}".format(end-start); output.writelines(f"{str(duration)}\n")
from numpy import *; from time import *; from math import *; thing = True;
with open("outputfile", "w") as output: output.writelines("Code 1:\n"); [testcode1() for i in range(0, 100)]; output.write("Code 2:\n"); [testcode2() for i in range(0, 100)]
with open("outputfile", "r") as inputFile: lines = inputFile.readlines(); code1List, code2List = list(filter(None, [float(item[:-1]) if item[:4] != "Code" and thing else setThing() for item in lines[1:]])), list(filter(None, [setThing() if item[:4] == "Code" else float(item[:-1]) if thing else None for item in lines[1:]])); code1List.sort(); code2List.sort(); print(f"Code 1 median:  {'{:.6f}'.format(code1List[int(len(code1List)/2)])}\nCode 1 average:    {'{:.6f}'.format(sum(code1List)/len(code1List))}\nCode 2 median:  {'{:.6f}'.format(code2List[int(len(code2List)/2)])}\nCode 2 average:    {'{:.6f}'.format(sum(code2List)/len(code2List))}")